name: Run web scraper

on:
  schedule:
    - cron: '0 */2 * * *' # Runs every other hour

#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install ruff pytest
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#      - name: Lint with ruff
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
#          # default set of ruff rules with GitHub Annotations
#          ruff --format=github --target-version=py37



  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Load repo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install python packages
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

      - name: Execute py script
        run: python main.py

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update data.csv
        id: auto-commit-action


#    # Set-up R
#    - name: Install packages
#      run: |
#        R -e 'install.packages("tidyverse")'
#        R -e 'install.packages("janitor")'
#        R -e 'install.packages("rvest")'
#    # Run R script
#    - name: Scrape
#      run: Rscript nifty50_scraping.R
#
# # Add new files in data folder, commit along with other modified files, push
#    - name: Commit files
#      run: |
#        git config --local user.name actions-user
#        git config --local user.email "actions@github.com"
#        git add data/*
#        git commit -am "GH ACTION Headlines $(date)"
#        git push origin main
#      env:
#        REPO_KEY: ${{secrets.GITHUB_TOKEN}}
#        username: github-actions

#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Setup python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.9'
#
#      - name: Install python packages
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Execute py script
#        run: python main.py
#
#      - name: Commit changes
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: Update courses.md
#        id: auto-commit-action
#
#      - name: Send email
#        if: steps.auto-commit-action.outputs.changes_detected == 'true'
#        uses: dawidd6/action-send-mail@v3
#        with:
#          server_address: smtp.gmail.com
#          server_port: 465
#          username: ${{secrets.MAIL_USERNAME}}
#          password: ${{secrets.MAIL_PASSWORD}}
#          subject: 'Babyschwimmen: Neue Kurse online'
#          to: franz.bernack@cranky.de
#          from: BabySwimming WebScraper
#          html_body: file://courses.md
#          convert_markdown: true
